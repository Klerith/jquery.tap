{"body":"# jQuery.tap\r\n\r\nA jQuery plugin that creates a click alternative for touch enabled browsers.\r\n\r\n## Why?\r\n\r\nClick events on touch devices do not work the best. There is a 300ms delay from when you release your finger to the time the click event is triggered. This behavior is not desired.\r\n\r\n## How do I use it?\r\n\r\nWhat is nice about this plugin, and what makes it different from other plugins, is that it takes advantage of jQuery's special event API, so you can use `jQuery.on` to bind events.\r\n\r\n```javascript\r\n// jQuery.on method\r\n$('.element').on('tap', onTapHandler);\r\n$('.element').on('tap', dataObject, onTapHandler);\r\n```\r\n\r\nAnd, because the event is bound through jQuery's `on` API, you can take advantage of namespaces and delegate events:\r\n\r\n```javascript\r\n// Namespace\r\n$('.element').on('tap.widget', onTapHandler);\r\n$('.element').on('tap.widget', dataObject, onTapHandler);\r\n\r\n// Delegate\r\n$('.element').on('tap', '.child-element', onTapHandler);\r\n$('.element').on('tap', '.child-element', dataObject, onTapHandler);\r\n\r\n// Together now\r\n$('.element').on('tap.widget', '.child-element', onTapHandler);\r\n$('.element').on('tap.widget', '.child-element', dataObject, onTapHandler);\r\n```\r\n\r\nThe tap event will also bubble.\r\n\r\n## What About Desktop?\r\n\r\nIf the browser does not support touch events, then the regular click event will be used. No need for if/else statements, jQuery.tap will do that for you.\r\n\r\n## Licence\r\n\r\njQuery.tap is licensed under the [MIT license](http://opensource.org/licenses/mit-license.html).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"jQuery.tap","tagline":"A jQuery plugin that creates a click alternative for touch enabled browsers"}